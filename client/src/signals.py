from PyQt5.QtCore import pyqtSignal, QObject

# В этом файле описаны классы наборов сигналов, используемых в программе, в т.ч. в самописных виджетах

# Класс сигналов, используемых практически всеми эл-ами панелей инструментов.
# Передаются обычно сначала от эл-а интерфейса к панели инструментов, затем к классу Window
class Signals(QObject):
    valueChanged = pyqtSignal()


# Специальные сигналы для классов LayerList и LayerListItem. Выделены в отдельный класс, чтобы
# главный цикл программы не пытался считывать эти сигналы с эл-ов, которые их по определению иметь не могут
class LayerSignals(QObject):
    # Слой активирован, передаётся индекс слоя
    activated = pyqtSignal(int)
    # Слой деактивирован, передаётся индекс слоя
    deactivated = pyqtSignal(int)
    # Слой сделан видимым, передаётся индекс слоя
    shown = pyqtSignal(int)
    # Слой скрыт, передаётся индекс слоя
    hidden = pyqtSignal(int)
    # Слой подвинут на 1 "уровень" выше, передаётся индекс слоя
    movedUp = pyqtSignal(int)
    # Слой подвинут на 1 "уровень" ниже, передаётся индекс слоя
    movedDown = pyqtSignal(int)
    # Два слоя (теоретически, не обязательно соседние) были поменяны местами, передаются индексы слоёв
    swappedLayers = pyqtSignal(int, int)
    # Слой удалён, передаётся индекс слоя
    deleted = pyqtSignal(int)


# Сигналы, описывающие взаимодействие GridToolbar и GridLayer
class GridSignals(QObject):
    # Линия сетки добавлена, передаётся направление (0 - горизонтальное, 1 - вертикальное),
    # тип отступа (0 - абсолютный, 1 - относительный), сам отступ (в пикселях / в процентах). Подробности в gridLayer.py
    added = pyqtSignal(int, int, int)
    # Линия сетки удалена, передаётся направление (0 - горизонтальное, 1 - вертикальное),
    # тип отступа (0 - абсолютный, 1 - относительный), сам отступ (в пикселях / в процентах). Подробности в gridLayer.py
    deleted = pyqtSignal(int, int, int)


# Сигналы, описывающие взаимодействие ImageLayer и ImageToolbar
class ImageSignals(QObject):
    # Состояние слоя-картинки изменено, передаются новый масштаб (size), тип выравнивания (alignment), инструмент(tool)
    stateChanged = pyqtSignal(int, str, str)
    # Картинка слоя-картинки изменена, передаётся путь до новой картинки
    imageChanged = pyqtSignal(str)


# Сигналы, которые сообщают формы (LoginForm, ChangePasswordForm, ProjectOpenForm) родительскому классу,
# когда от того требуются действия (например, взаимодействие с самим проектом, сохранение данных пользователя, ...)
class FormSignals(QObject):
    # Вход пользователя/открытие проекта прошли успешно, сообщаются все известные данные о сессии: имя пользователя,
    # пароль, данные проекта (если известны, иначе - пустой список)
    requestAccepted = pyqtSignal(str, str, dict)
    # Требуется переход в другую форму
    openForm = pyqtSignal()
